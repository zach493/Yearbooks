import { EnvironmentSecretType, EnvironmentVariableEnvironment, EnvironmentVariableVisibility } from '../graphql/generated';
export declare function promptVariableTypeAsync(nonInteractive: boolean, initialType?: EnvironmentSecretType): Promise<EnvironmentSecretType>;
export declare function parseVisibility(stringVisibility: 'plaintext' | 'sensitive' | 'secret'): EnvironmentVariableVisibility;
export declare function promptVariableVisibilityAsync(nonInteractive: boolean, selectedVisibility?: EnvironmentVariableVisibility | null): Promise<EnvironmentVariableVisibility>;
type EnvironmentPromptArgs = {
    nonInteractive: boolean;
    selectedEnvironments?: EnvironmentVariableEnvironment[];
    availableEnvironments?: EnvironmentVariableEnvironment[];
};
export declare function promptVariableEnvironmentAsync(input: EnvironmentPromptArgs & {
    multiple: true;
}): Promise<EnvironmentVariableEnvironment[]>;
export declare function promptVariableEnvironmentAsync(input: EnvironmentPromptArgs & {
    multiple?: false;
}): Promise<EnvironmentVariableEnvironment>;
export declare function promptVariableValueAsync({ nonInteractive, required, hidden, filePath, initial, }: {
    nonInteractive: boolean;
    required?: boolean;
    initial?: string | null;
    filePath?: boolean;
    hidden?: boolean;
}): Promise<string>;
export declare function promptVariableNameAsync(nonInteractive: boolean, initialValue?: string): Promise<string>;
export {};
