import { z } from 'zod';
import { ExpoGraphqlClient } from '../../commandUtils/context/contextUtils/createGraphqlClient';
export declare namespace WorkflowRevisionMutation {
    const ValidationErrorExtensionZ: z.ZodObject<{
        errorCode: z.ZodLiteral<"VALIDATION_ERROR">;
        metadata: z.ZodObject<{
            formErrors: z.ZodArray<z.ZodString, "many">;
            fieldErrors: z.ZodRecord<z.ZodString, z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            formErrors: string[];
            fieldErrors: Record<string, string[]>;
        }, {
            formErrors: string[];
            fieldErrors: Record<string, string[]>;
        }>;
    }, "strip", z.ZodTypeAny, {
        metadata: {
            formErrors: string[];
            fieldErrors: Record<string, string[]>;
        };
        errorCode: "VALIDATION_ERROR";
    }, {
        metadata: {
            formErrors: string[];
            fieldErrors: Record<string, string[]>;
        };
        errorCode: "VALIDATION_ERROR";
    }>;
    function validateWorkflowYamlConfigAsync(graphqlClient: ExpoGraphqlClient, { appId, yamlConfig, }: {
        appId: string;
        yamlConfig: string;
    }): Promise<void>;
}
